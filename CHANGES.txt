Version 0.5
-----------
Improved timing - mode 7 bodged to exactly correct cycle count
Interlace timing accounted for in modes 0-6.
Interrupt latency added
fixed window.cc (took out 'virtual' on most functions) - now OK in gcc 2.7.0
Changed default position of g++ includes to /usr/include/g++

Version 0.6
-----------
A few fiddles with the config for linux - now compiles on 2.7.0 with the ELF-GCC
release; but could cause probs for older releases.

Stated adding sound card.

Version 0.7 (Mike Wyatt)
-----------
Added conditional compilation for all the Microsoft Windows code. Should only
need to maintain one set of source files for both the X and MS Win versions.

Changed sound code so it does not play a sound until both the high and low
bytes of the frequency have been set (eliminates spurious high pitch beeps).

Video module now generates a cursor.

Implemented a load of undocumented 6502 instructions.

Directed read and writes to the 16 bytes above each VIA back down to
the VIAs (Castle Quest uses the higher addresses).

Added the atodconv module to provide Analogue to Digital support.  Added the
beebstate module to provide Save and Restore of Beeb State files.  These two
new modules should compile under UNIX but there is currently no code in the
X Windows version to use them.

MS Windows version now provides:
  Load of menus to control everything
  Dynamic disc selection
  Beeb State save and restore
  Various Window sizes
  Real time and fixed frame rate modes
  Sound support
  Joystick support
  Mousestick support
  ROM write protection
  Multiple ROM initialisation
  Games keyboard mapping
  Pentium optimised version

Version 0.71 (Mike Wyatt)
------------
Changed VIA timer latches initial value to 0xffff (Castle Quest now works).

Fixed BCD addition and substraction and prevented mode 7 code from dividing
by zero (Exile now works).

Changed VIA code so the data direction registers can be read (Codename Droid
now works).

Fixed cursor colour in UNIX version.

Added sideways RAM support (so Exile can be played full screen).


Version 0.8 (Mike Wyatt & Laurie Whiffen)
-----------
Added disc write and format capability.

Changed disc load code to give a warning if disc image loaded looks like its
been loaded using wrong type (single/doubled sided).

MS Windows version only:
  Fixed so all key presses are released when windows looses focus.
  Rom slots can be individually changed between ROM and RAM using the menus.
  Added user definable keyboard mapping options.
  User preferences (including the keyboard mapping) can be saved in an INI
    file using a new menu option.
  Added menu options for write protection and creating new disc images.


Version 0.9 (Mike Wyatt)
-----------
Added AMX mouse support.

Converted to use DirectX and added a full screen option.

Fixed a few bugs (thanks to Piers Haken for pointing out a bug in the video
code).


Version 1.0 (Mike Wyatt)
-----------
Switchable DirectDraw and DirectSound.
Fixed Windows message boxes when using DirectDraw.
Printer support.
Improved ROM size checking.
Improved speed regulation code.


Version 1.03 (Robert Schmidt)
------------
Windows update only:
Monochrome monitor/B&W TV emulation

Version 1.04 (Robert Schmidt)
------------
Windows update only:
* Remember last used directories for disc images and emulator states.
* Dialog for opening disc images has 3 new filters:
    - Automatic *.ssd/*.dsd detection
    - *.ssd only
    - *.dsd only
* Support for higher DirectDraw resolutions, through new sub menu.
  (1280x1024 makes aliasing effects unnoticable, but requires a fast
  DirectDraw implementation.)
* Added option to use 32-bit DirectDraw modes in full screen, as opposed
  to 8-bit. (In a window, DirectDraw uses the desktop color depth.)
  When combined with "Buffer in video RAM", the result is a *superior*,
  interpolated display!  Scaling artifacts "disappear" at any resolution.
* Made "Full Screen" a toggle, not a standalone mode/"window size".
* Fixed a bug that didn't show speed/FPS in a windowed DirectDraw mode.